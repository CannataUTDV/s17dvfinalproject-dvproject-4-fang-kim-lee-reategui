{
    "collab_server" : "",
    "contents" : "# server.R\nrequire(ggplot2)\nrequire(dplyr)\nrequire(shiny)\nrequire(shinydashboard)\nrequire(data.world)\nrequire(readr)\nrequire(DT)\n\nshinyServer(function(input, output) { \n  # These widgets are for the Crosstabs tab.\n  online1 = reactive({input$rb1})\n  KPI_Low = reactive({input$KPI1})     \n  KPI_Medium = reactive({input$KPI2})\n  \n  # Begin Crosstab Tab 1 ------------------------------------------------------------------\n  df1 <- eventReactive(input$click1, {\n    # if(online1() == \"SQL\") {\n      print(\"Getting from data.world\")\n      query(\n        data.world(propsfile = \"www/.data.world\"),\n        dataset=\"jlee/s-17-dv-final-project\", type=\"sql\",\n        query=\"Select `CONTROL`, c.AreaName,  \n        sum(INEXPFTE) as sum_exp, \n        sum(COSTT4_A) as sum_cost, \n        sum(INEXPFTE) / sum(COSTT4_A) as ratio,\n        \n        case\n        when sum(INEXPFTE) / sum(COSTT4_A) < ? then '03 Low'\n        when sum(INEXPFTE) / sum(COSTT4_A) < ? then '02 Medium'\n        else '01 High'\n        end AS kpi\n        \n        from `CollegeScorecard.csv/CollegeScorecard` g join `us_education_census.csv/us_education_census` c \n        on g.`STABBR` = c.`State`\n        where `CCBASIC` in (18, 19, 21, 22, 23) \n        group by `CONTROL`, c.AreaName\n        order by `CONTROL`, c.AreaName\",\n        queryParameters = list(KPI_Low(), KPI_Medium())\n      ) # %>% View()\n    # }\n    # else {\n    #   print(\"Getting from csv\")\n    #   file_path = \"www/CollegeScorecard.csv\"\n    #   df <- readr::read_csv(file_path)\n    #   df %>%\n    #     dplyr::group_by(`CONTROL`, `c.AreaName`) %>%\n    #     dplyr::summarize(sum_exp = sum(INEXPFTE), sum_cost = sum(COSTT4_A),\n    #                      ratio = sum(INEXPFTE) / sum(COSTT4_A),\n    #                      kpi = if_else(ratio <= KPI_Low(), '03 Low',\n    #                                    if_else(ratio <= KPI_Medium(), '02 Medium', '01 High'))) # %>% View()\n    # }\n  })\n  output$data1 <- renderDataTable({DT::datatable(df1(), rownames = FALSE,\n                                                 extensions = list(Responsive = TRUE, FixedHeader = TRUE)\n  )\n  })\n  output$plot1 <- renderPlot({ggplot(df1()) + \n      theme(axis.text.x=element_text(size=15, vjust=0.5)) + \n      theme(axis.text.y=element_text(size=10, hjust=0.5)) +\n      geom_text(aes(x=`CONTROL`, y=AreaName, label=sum_cost), size=5) +\n      geom_tile(aes(x=`CONTROL`, y=AreaName, fill=kpi), alpha=0.50)\n  })\n  # End Crosstab Tab 1 ___________________________________________________________\n  \n  # Begin Crosstab Tab 2 ------------------------------------------------------------------\n  df2 <- eventReactive(input$click2, {\n    # if(online1() == \"SQL\") {\n    print(\"Getting from data.world\")\n    query(\n      data.world(propsfile = \"www/.data.world\"),\n      dataset=\"jlee/s-17-dv-final-project\", type=\"sql\",\n      query=\"Select `CONTROL`, c.AreaName, `UGDS_WHITE`,  \n      sum(TUITFTE) as sum_rev, \n      sum(COSTT4_A) as sum_cost, \n      sum(TUITFTE) / sum(COSTT4_A) as ratio,\n      \n      case\n      when sum(TUITFTE) / sum(COSTT4_A) < ? then '03 Low'\n      when sum(TUITFTE) / sum(COSTT4_A) < ? then '02 Medium'\n      else '01 High'\n      end AS kpi\n      \n      from `CollegeScorecard.csv/CollegeScorecard` g join `us_education_census.csv/us_education_census` c \n      on g.`STABBR` = c.`State`\n      where `CCBASIC` in (18, 19, 21, 22, 23) \n      group by `CONTROL`, c.AreaName\n      order by `CONTROL`, c.AreaName\", \n        queryParameters = list(KPI_Low(), KPI_Medium())\n      ) # %>% View()\n    # }\n    # else {\n    #   print(\"Getting from csv\")\n    #   file_path = \"www/CollegeScorecard.csv\"\n    #   df <- readr::read_csv(file_path)\n    #   df %>%\n    #     dplyr::group_by(`CONTROL`, `c.AreaName`) %>%\n    #     dplyr::summarize(sum_exp = sum(INEXPFTE), sum_cost = sum(COSTT4_A),\n    #                      ratio = sum(INEXPFTE) / sum(COSTT4_A),\n    #                      kpi = if_else(ratio <= KPI_Low(), '03 Low',\n    #                                    if_else(ratio <= KPI_Medium(), '02 Medium', '01 High'))) # %>% View()\n    # }\n  })\n  output$data2 <- renderDataTable({DT::datatable(df2(), rownames = FALSE,\n                                                 extensions = list(Responsive = TRUE, FixedHeader = TRUE)\n  )\n  })\n  output$plot2 <- renderPlot({ggplot(df2()) + \n      theme(axis.text.x=element_text(size=15, vjust=0.5)) + \n      theme(axis.text.y=element_text(size=10, hjust=0.5)) +\n      geom_text(aes(x=`CONTROL`, y=AreaName, label=sum_rev), size=5) +\n      geom_tile(aes(x=`CONTROL`, y=AreaName, fill=kpi), alpha=0.50)\n  })\n  # End Crosstab Tab 2 ___________________________________________________________\n  \n  })\n",
    "created" : 1493694951868.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2175567890",
    "id" : "9F20A7FF",
    "lastKnownWriteTime" : 1493697219,
    "last_content_update" : 1493697219824,
    "path" : "~/DV_ProjectFinal/02 Shiny/Shiny 02/server.R",
    "project_path" : "02 Shiny/Shiny 02/server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}